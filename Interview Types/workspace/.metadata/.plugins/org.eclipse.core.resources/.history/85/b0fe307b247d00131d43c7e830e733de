package recursion;

public class CombinationOfString {
	
	private String[] allCombs = new String[100];		
	public static String[] takeCombination(String word){

		combine("", word, allCombs, -1);
		return allCombs;
	}
	public static void combine(String prefix, String word, String[] arr, int level){
		if( !prefix.isEmpty() )
			arr[level] = prefix;

		for(int i=0; i<word.length(); i++){
			combine(prefix+word.charAt(i), word.substring(i+1), arr, ++level);
		}
	}
	
	public static void combine(String prefix, String word){
		if( !prefix.isEmpty() )
			System.out.println(prefix);

		for(int i=0; i<word.length(); i++){
			combine(prefix+word.charAt(i), word.substring(i+1));
		}
	}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
//		combine("","1234");
		String[] coms = takeCombination("caner");
		for(String c: coms)
			System.out.println(c);
	}

}
