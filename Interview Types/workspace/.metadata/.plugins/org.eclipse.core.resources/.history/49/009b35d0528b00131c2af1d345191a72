package sortAlgos;

public class ShellSort {

	public static <T extends Comparable<T>> void sort(T[] arr){

		int k=1;
		while(k < arr.length/3) 	k = k*3 + 1;
		
		for(; k>=1; k /= 3){
		 		
			if(arr.length >= k)
				for(int i=1; i<arr.length; i++)
					for(int j=i; j>=k; j-=k)
						if(less(arr[j], arr[j-k]))
							exch(j-k, j, arr);
						else
							break;
		}					
	}

	private static <T extends Comparable<T>> boolean less(T t1, T t2){
		return (t1.compareTo(t2) < 0);
	}

	private static <T extends Comparable<T>> void exch(int i, int j, T[] arr){
		T swap = arr[i];
		arr[i] = arr[j];
		arr[j] = swap;
	} 
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Integer[] numbers  = {4,6,2,7,9,23,11,2};
		Integer[] n2 = numbers.clone(); // Copies the values only, copy by value.
		Integer[] n3 = numbers; // Copies the address of the array, copy by reference.
		sort(numbers);
		for(int i=0; i<numbers.length; i++)
			System.out.println(numbers[i] + "," + n2[i] + "," +  n3[i]);
	}
	
}
