package sortAlgos;

public class MergeSort {

	public static <T extends Comparable<T>> void sort(T[] arr){
		T[] aux = arr.clone();
		sort(arr, aux, 0, arr.length-1);
	}
	
	public static <T extends Comparable<T>> void sort(T[] arr, T[] aux, int l, int h){		
		if(h>=l) return;
		int mid = l + (h-l)/2;
		sort(arr, aux, l, mid);
		sort(arr, aux, mid+1, h);
		merge(arr, aux, l, mid, h);
	}
	
	public static <T extends Comparable<T>> void merge(T[] arr, T[] aux, int l, int m, int h){
		
		int i=l;
		int j=mid;
		
		for(int k=1; k<arr.length; k++){
			
			if(less(aux[i], aux[j])) arr[k] = aux[i++];
		}
	}
	
	public static <T extends Comparable<T>> boolean less(T t1, T t2){
		return t1.compareTo(t2) < 0;
	}
}
